#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&none>;
            key-positions = <10 11>;
        };

        leftshift-to-layer2 {
            bindings = <&sl 2>;
            key-positions = <22 34>;
        };

        right-shift-to-layer2 {
            bindings = <&sl 2>;
            key-positions = <33 42>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q        &kp W      &kp E      &kp R  &kp T                                       &kp Y                &kp U      &kp I       &kp O          &lt 5 P
&kp A               &kp S      &kp D      &kp F  &kp G             &trans         &kp H      &kp J                &kp K      &kp L       &kp SEMICOLON  &kp SINGLE_QUOTE
&mt LEFT_CONTROL Z  &kp X      &kp C      &kp V  &kp B             &kp MINUS      &kp N      &kp M                &kp COMMA  &kp PERIOD  &kp SLASH      &kp BACKSLASH
&kp LEFT_SHIFT      &kp GRAVE  &kp EQUAL  &mo 1  &kp LEFT_COMMAND  &lt 3 SPACE    &kp ENTER  &lt 3 RIGHT_COMMAND                                        &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                        &kp NUMBER_6           &kp N7            &kp N8             &kp N9     &kp N0
&trans          &trans        &trans        &trans        &trans     &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp PLUS
&trans          &trans        &trans        &kp LG(X)     &kp LG(C)  &kp LG(V)    &kp QUESTION          &kp EQUAL              &kp LESS_THAN     &kp GREATER_THAN   &trans     &trans
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans     &trans       &trans                &trans                                                                 &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTRK  &kp MINUS  &kp UNDERSCORE
&kp GRAVE        &kp TILDE    &trans    &trans      &trans       &trans    &trans  &trans     &trans         &trans     &kp EQUAL  &kp PLUS
&trans           &trans       &trans    &trans      &trans       &trans    &trans  &trans     &trans         &trans     &trans     &trans
&trans           &trans       &trans    &trans      &trans       &trans    &trans  &trans                                          &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans     &trans                          &trans  &trans        &kp LG(N0)          &kp LG(BACKSPACE)  &kp BACKSPACE
&trans      &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans        &kp RA(UP_ARROW)    &trans             &kp ENTER
&trans      &trans  &trans  &kp LG(X)  &kp LG(C)  &kp LG(V)    &trans  &trans  &kp RA(LEFT)  &kp RA(DOWN_ARROW)  &kp RA(RIGHT)      &kp RG(RS(RIGHT))
&trans      &trans  &trans  &trans     &trans     &trans       &trans  &trans                                                       &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp RG(PLUS) RG(MINUS)>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans            &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans        &kp RG(UP_ARROW)  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp RG(LEFT)  &kp RG(DOWN)      &kp RG(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                 &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans      &trans          &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &bootloader  &trans      &trans          &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans                                      &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans            &trans                                  &trans             &kp RA(RG(LEFT_ARROW))  &kp RG(R)           &kp RG(RA(RIGHT_ARROW))  &trans
&trans  &trans  &trans  &kp LG(LA(LEFT))  &kp LA(LG(RIGHT))  &trans       &trans  &trans             &mkp MB1                &kp RC(UP_ARROW)    &mkp MB2                 &trans
&trans  &trans  &trans  &trans            &kp LG(C)          &kp LG(V)    &trans  &trans             &kp LC(LEFT)            &kp RC(DOWN_ARROW)  &kp RC(RIGHT)            &trans
&trans  &trans  &trans  &trans            &trans             &trans       &trans  &kp RIGHT_COMMAND                                                                       &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
