#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        right-command {
            bindings = <&kp RIGHT_COMMAND>;
            key-positions = <40 41>;
        };

        Tab {
            bindings = <&none>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W         &kp E             &kp R            &kp T                                         &kp Y              &kp U      &kp I       &kp O          &kp P
&mt LCTRL A       &kp S         &kp D             &kp F            &kp G               &trans         &kp H      &kp J              &kp K      &kp L       &kp SEMICOLON  &kp SINGLE_QUOTE
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V            &kp B               &kp MINUS      &kp N      &kp M              &kp COMMA  &kp PERIOD  &kp SLASH      &kp BACKSLASH
&kp LEFT_SHIFT    &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 BACKSPACE  &lt 2 LEFT_COMMAND  &lt 3 SPACE    &kp ENTER  &kp RIGHT_COMMAND                                        &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                              &kp NUMBER_6       &kp N7     &kp N8                 &kp N9     &kp N0
&trans          &trans        &trans        &trans        &trans  &trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LPAR   &kp RIGHT_PARENTHESIS  &kp MINUS  &kp PLUS
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans  &trans    &kp LESS_THAN     &kp GREATER_THAN   &kp TILDE  &trans                 &trans     &trans
&trans          &trans        &trans        &trans        &trans  &trans    &trans            &trans                                                          &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans          &kp UP_ARROW    &trans     &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans          &trans          &trans     &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans      &trans          &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &bootloader  &trans      &trans          &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans                                      &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans             &kp RA(RG(LG(LEFT_ARROW)))  &kp RG(R)  &kp RG(RA(RIGHT_ARROW))  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans             &mkp MB1                    &mkp MB3   &mkp MB2                 &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans             &trans                      &trans     &trans                   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp RIGHT_COMMAND                                                                  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
